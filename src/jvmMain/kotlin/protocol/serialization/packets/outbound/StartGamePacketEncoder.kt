package com.gabrielleeg1.bedrockvoid.protocol.serialization.packets.outbound

import com.gabrielleeg1.bedrockvoid.protocol.packets.outbound.StartGamePacket
import com.gabrielleeg1.bedrockvoid.protocol.serialization.EncodingStream
import protocol.serialization.EncodingStrategy

object StartGamePacketEncoder : EncodingStrategy<StartGamePacket> {
  @Suppress("LongMethod")
  override fun EncodingStream.encodeT(value: StartGamePacket) {
    encodeVarLong(value.entityId)
    encodeVarULong(value.runtimeEntityId)
    encodeVarInt(value.gameMode)
    encodeValue(value.spawn)
    encodeValue(value.rotation)
    encodeVarInt(value.worldSeed)
    encodeShortLE(value.spawnBiomeType)
    encodeString(value.customBiomeName)
    encodeVarInt(value.dimension)
    encodeVarInt(value.generator)
    encodeVarInt(value.worldGameMode)
    encodeVarInt(value.difficulty)
    encodeValue(value.worldSpawn)
    encodeBoolean(value.achievementsDisabled)
    encodeVarInt(value.dayCycleStopTime)
    encodeVarInt(value.educationOffer)
    encodeBoolean(value.educationFeatures)
    encodeString(value.educationProductionId)
    encodeFloatLE(value.rainLevel)
    encodeFloatLE(value.lightningLevel)
    encodeBoolean(value.confirmedPlatformLockedContent)
    encodeBoolean(value.multiplayer)
    encodeBoolean(value.broadcastToLan)
    encodeVarInt(value.xboxLiveBroadcastMode)
    encodeVarInt(value.platformBroadcastMode)
    encodeBoolean(value.commandsEnabled)
    encodeBoolean(value.requiredTexturePacks)
    encodeArray(value.gameRules)
    encodeArrayIntLE(value.experiments)
    encodeBoolean(value.experimentsPreviouslyEnabled)
    encodeBoolean(value.bonusChest)
    encodeBoolean(value.startWithMapEnabled)
    encodeVarInt(value.permissionLevel)
    encodeIntLE(value.serverChunkTickRange)
    encodeBoolean(value.behaviorPackLocked)
    encodeBoolean(value.resourcePackLocked)
    encodeBoolean(value.fromLockedWorldTemplate)
    encodeBoolean(value.msaGamerTagsOnly)
    encodeBoolean(value.fromWorldTemplate)
    encodeBoolean(value.worldTemplateSettingsLocked)
    encodeBoolean(value.spawnOnlyV1Villagers)
    encodeString(value.baseGameVersion)
    encodeIntLE(value.limitedWorldHeight)
    encodeIntLE(value.limitedWorldWidth)
    encodeBoolean(value.newNether)
    encodeValue(value.educationSharedResourceUri)
    encodeBoolean(value.forceExperimentalGameplay)
    if (value.forceExperimentalGameplay) {
      encodeBoolean(value.forceExperimentalGameplay)
    }
    encodeString(value.levelId)
    encodeString(value.worldName)
    encodeString(value.templateContentId)
    encodeBoolean(value.trial)
    encodeVarUInt(value.movementType.toUInt())
    encodeVarInt(value.movementRewindSize)
    encodeBoolean(value.serverAuthoritativeBlockBreaking)
    encodeLongLE(value.time)
    encodeVarInt(value.enchantmentSeed)
    encodeArray(value.blocks)
    encodeArray(value.items)
    encodeString(value.multiplayerCorrelationId)
    encodeBoolean(value.serverAuthoritativeInventory)
    encodeString(value.gameVersion)
  }
}
